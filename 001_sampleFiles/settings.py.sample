import datetime

"""
Django settings for backend_api project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG")

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'api_auth',
    'api_product',

    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'dry_rest_permissions',
    'corsheaders',
    'rest_framework_swagger',
    'debug_toolbar'

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend_api.urls'

TEMPLATES = [
    {
        'BACKEND' : 'django.template.backends.django.DjangoTemplates',
        'DIRS'    : [],
        'APP_DIRS': True,
        'OPTIONS' : {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend_api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

#
# DATABASE_ROUTERS = ['.routers.DatabaseRouter']
# DATABASE_APPS_MAPPING = {'user_data'   : 'users_db'}

DATABASES = {
    'defaultxx'      : {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME'  : os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'default'        : {
        'ENGINE'  : os.getenv("DB_ENGINE"),
        'NAME'    : os.getenv("DB_NAME"),
        'USER'    : os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASS"),
        'HOST'    : os.getenv("DB_HOST"),
        'PORT'    : os.getenv("DB_PORT"),
    },
   # 'users_db': {
   #      'ENGINE'  : os.getenv("DB_AUTH_ENGINE"),
   #      'NAME'    : os.getenv("DB_AUTH_NAME"),
   #      'USER'    : os.getenv("DB_AUTH_USER"),
   #      'PASSWORD': os.getenv("DB_AUTH_PASS"),
   #      'HOST'    : os.getenv("DB_AUTH_HOST"),
   #      'PORT'    : os.getenv("DB_AUTH_PORT"),
   #  },

}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# CORS

# ---- if not working try this
# CORS_ORIGIN_ALLOW_ALL=True

CORS_ORIGIN_WHITELIST = (
    'localhost:8000',
    'localhost:8080',
    '127.0.0.1:9000'
)

# REST FRAMEWORK

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES'    : (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

# DJOSER Settings

DJOSER = {
    'SERIALIZERS': {
        'user'        : 'api_auth.serializers.UserProfileSerializer',
        'current_user': 'api_auth.serializers.CurrentUserSerializer',
    },
}

# JWT Settings

JWT_AUTH = {

    'JWT_EXPIRATION_DELTA'        : datetime.timedelta(days=1),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX'      : 'JWT',
}

# DJANGO DEFAULT USER MODEL

AUTH_USER_MODEL = 'api_auth.User'
